#! /usr/bin/env python 

##################################
# Read Generate Fastq XML file containing run info data
# Export
#   - library ID <SampleID>
#   - library label <SampleName>
#   - Total number of clusters <NumberOfClustersRaw>
#   - Passed number of clusters <NumberOfClustersPF>
########################################################


import sys
import xml.etree.ElementTree as ET
import MySQLdb as mdb
import pdb
import datetime

def main(argv):

    xml_file = ET.parse(argv[1])
    root = xml_file.getroot()
    

    ## Connect to db
    try:
        conn = mdb.connect('localhost', 'brad', 'Eu23ler1', 'sample_db')
        cur = conn.cursor()
    except mdb.Error, e:
        print "MySQLdb error %d: %s " % (e.args[0] + e.args[1])
    
    ## Parse XML
    run_date = str(root[0].text.split("T")[0])
    run_date = datetime.datetime.strptime)






        pdb.set_trace()
        #Write to db            
        #Check if record exists using date and idlibrary
        exec_string = "SELECT EXISTS(SELECT 1 FROM sequencing WHERE date = {0} AND idlibrary = {1})".format(run_date, info['sample_id'])
        cur.execute(exec_string)
        print cur.fetchall()[0]
        exec_string = "INSERT INTO sequencing (date, idlibrary, clusters_raw, clusters_pf) VALUES ({0}, {1}, {2}, {3})".format(run_date, info['sample_id'], info['clusters_raw'], info['clusters_pf'])
        cur.execute(exec_string)
        
        cur.execute("SELECT * FROM sequencing WHERE idlibrary = {0}".format(info['sample_id']))
        print cur.fetchall()[0]
    #Close connection
    
if __name__ == "__main__":
    main(sys.argv)
