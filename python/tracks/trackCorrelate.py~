#! /usr/bin/env python

####
# Correlate (cross for two samples auto for one) values across given feature
# Outputs
####
import sys
import os
import re
import shutil
import argparse
import tempfile
import pdb
import pysam
import numpy as np
import scipy.signal as ss
import scipy.stats.stats as stats
import tables as tb
from multiprocessing import Pool

feature_path = "/home/user/lib/features_general/"
out_path = "/media/storage2/analysis/crosscor"

class cross_track:
    
    def __init__(self, file_a, file_b, track_a, track_b, corr_type):
        self.file_a = file_a
        self.file_b = file_b
        self.track_a = track_a
        self.track_b = track_b
        self.input_data_type = "h5"
        self.corr_type = corr_type    

    def run(self):
        print chr_tbp
        h5_a = tb.openFile(self.file_a)
        h5_b = tb.openFile(self.file_b)
        sample1 = h5_a.getNode("/", self.track_a)
        sample_chrs = [chr._v_name for chr in sample1._f_iterNodes()]
        sample2 = h5_b.getNode("/", self.track_b)
        sample1_data = []
        sample2_data = []

        for node in sample1._f_iterNodes():
            sample1_data.append(node[:])
        vals1 = np.concatenate(sample1_data)

        for node in sample2._f_iterNodes():
            sample2_data.append(node[:])
        vals2 = np.concatenate(sample2_data)

        window_size = int(sample1_data.getAttr('Resolution'))


        if self.corr_type == "cross" or self.corr_type == "auto": 
            corr = ss.fftconvolve(vals1, vals2, 'same')
        elif self.corr_type == "spearmanr":
            corr = [stats.spearmanr(vals1, vals2)
        elif self.corr_type == "pearsonr":
            corr = [stats.pearsonr(vals1, vals2)

        print corr
    
def main(argv):
    parser = argparse.ArgumentParser()
    parser.add_argument("--file_a", dest="file_a", required=False)
    parser.add_argument("--track_a", dest="track_a", required=False)
    parser.add_argument("--file_b", required=False)
    parser.add_argument("--track_b", dest="track_b", required=False)
    parser.add_argument("--cor_type", choices=['cross', 'spearmanr', 'pearsonr'])
    
    args = parser.parse_args()
    
    file_b = args.file_a
    if args.file_b: file_b = args.file_b
    
    track_b = ""
    if args.track_b or args.file_b:
        # cross-correlate
        track_b = args.track_b
    else:
        # auto-correlate
        track_b = args.track_a
        
    obj = cross_track(args.file_a, file_b, args.track_a, track_b, args.cor_type)
    obj.run()

    

if __name__ == "__main__":
    main(sys.argv)
