#! /usr/bin/env python

#### 
# Find position of through between signal peaks
# INPUT: signal matrix (rows are features, columns are positions)
# INPUT: BED file with column 4 matching column 1 of signal matrix
# OUTPUT: BED file with start and end adjusted so that midpoint is trough; length is the same as input
#
# General strategy:
#     Cross-correlate input signal with template of two gaussian
#     Vary intergaussian distance, collect maximum correlation value and position
#     Loop through input lines
#     Loop through range of range of bandwiths for 
####

def double_gaussian(M, d):
   vect = np.zeros(M)
   vect_mid = M / 2
   gaus = ss.guassian(j, std=1)

   start = vect_mid - ((d / 2) + (j/2))
   end = vect_mid - ((d / 2) - (j/2))
   vect[start:end] = vect[start:end] + gaus

   start = vect_mid + ((d / 2) + (j/2))
   end = vect_mid + ((d / 2) - (j/2))
   vect[start:end] = vect[start:end] + gaus
   
   return vect

def main(argv):
    
if __name__ == "__main__":
    main(sys.argv)
